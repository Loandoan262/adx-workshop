Benötigte Informationen:
Mdr_signals	PWF Zustand „Fahren“: | where signal.ST_CON_VEH == 10
	Umgebungstemperatur  signal.TEMP_EX oder in ungefiltert signal.TEMP_EX_UNFILT, 			Ungültigkeitswert jeweils FFh, muss ausgeklammert werden 
	GPS	Longitudinal: 	signal.ST_LONG_NAVI
		Latitude: 	signal.ST_LAT_NAVI
	

Todo: Skripterstellung und Visualisierung
Filtere auf z.B. 10 Fahrzeuge und die letzten 10 Tage um Rechenzeit zu sparen.
Bilde die erste Ableitung der Umgebungstemperatur. Benötigt werden nur die Werte aus dem PWF Zustand „Fahren“. Hierdurch werden unplausible Werte, die aus der SG Initialisierung stammen ausgeklammert. Achte auf Fahrtwechsel.
Visualisiere in einer Landkarte.

Anmerkung: Der Umgebungsdruck zeigt ein ähnliches Verhalten und kann auch verwendet werden. Für einige Usecases ist auch die Kombination aus Umgebungsdruck und Umgebungstemperatur hoch interessant
(Signal nicht in allen Fahrzeugen aufgezeichnet: signal.AIP_ENG_DRV oder alternativ redundantes Signal 
gemultiplexte PDU noch nicht in interpretiert in Kusto verfügbar: OBD_SEN_DIAGST: 
Wenn ID_OBD_SEN=6hex  RWDT_OBD_SEN_2, Wertebereich: 598...1108 hPa Umrechnung: (PH) = 0,5 * (HEX) +598 [hPa])


signals
| take 10

// Nice rendering
let id = 3703007;
let interval = 1m;
let stime = datetime(2020-04-01);
let etime = datetime(2020-04-15);
signals
| where serno == id
| where signal.ST_CON_VEH == 10
| project serno, signal_ts, temp=todouble(signal.TEMP_EX), temp_unf = todouble(signal.TEMP_EX_UNFILT), lon = todouble(signal.ST_LONG_NAVI), lat = todouble(signal.ST_LAT_NAVI)
| where isnotempty(temp)
| make-series avg(temp) on signal_ts from stime to etime step interval by serno
| extend derivative=series_fir(avg_temp, dynamic([1,-1]))
| project-away avg_temp
| render timechart

//Now do a table again
let id = dynamic([4405594, 4196428]);
let interval = 1s;
let stime = datetime(2020-04-13);
let etime = datetime(2020-04-14);
signals
| where serno in (id)
| where signal.ST_CON_VEH == 10
| project serno, signal_ts, temp=todouble(signal.TEMP_EX), temp_unf = todouble(signal.TEMP_EX_UNFILT), lon = todouble(signal.ST_LONG_NAVI), lat = todouble(signal.ST_LAT_NAVI)
| where isnotempty(temp)
| make-series temp=avg(temp), lon=max(lon), lat=max(lat) on signal_ts from stime to etime step interval by serno
| extend derivative=series_fir(temp, dynamic([1,-1]))
//| project-away avg_temp
| mv-expand signal_ts, temp, derivative, lon, lat
| where lon != 0 and lat != 0
| take 10000

| join kind = inner hint.strategy=shuffle (
signals 
| where serno == 4405594
| where signal.ST_CON_VEH == 10
| project serno, signal_ts, temp=todouble(signal.TEMP_EX), temp_unf = todouble(signal.TEMP_EX_UNFILT), lon = todouble(signal.ST_LONG_NAVI), lat = todouble(signal.ST_LAT_NAVI)
| where isnotempty(temp)
| extend join_ts = tostring(bin(signal_ts, 1s))
| take 100
) on ($left.serno == $right.serno) and ($left.join_ts==$right.join_ts)


signals 
| where serno == 4405594
| where signal.ST_CON_VEH == 10
| project serno, signal_ts, temp=todouble(signal.TEMP_EX), temp_unf = todouble(signal.TEMP_EX_UNFILT), lon = todouble(signal.ST_LONG_NAVI), lat = todouble(signal.ST_LAT_NAVI)
| where isnotempty(temp)
| extend join_ts = tostring(bin(signal_ts, 1s))
| count

